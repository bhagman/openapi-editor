{
  "openapi": "3.1.1",
  "info": {
    "title": "Pet Store API",
    "version": "1.0.0",
    "description": "A sample API for managing pets in a pet store"
  },
  "servers": [
    {
      "url": "https://api.petstore.com/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/pets": {
      "get": {
        "summary": "List all pets",
        "description": "Retrieve a list of all pets in the store",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of pets to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter pets by category",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dog",
                "cat",
                "bird",
                "fish"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of pets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string"
                      },
                      "category": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "available",
                          "pending",
                          "sold"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          }
        },
        "tags": [
          "pets"
        ]
      },
      "post": {
        "summary": "Add a new pet",
        "description": "Create a new pet in the store",
        "responses": {
          "201": {
            "description": "Pet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "category": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          }
        },
        "tags": [
          "pets"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "category"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Fluffy"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "dog",
                      "cat",
                      "bird",
                      "fish"
                    ],
                    "example": "cat"
                  },
                  "age": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 3
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "available",
                      "pending",
                      "sold"
                    ],
                    "default": "available"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pets/{petId}": {
      "get": {
        "summary": "Get pet by ID",
        "description": "Retrieve a specific pet by its ID",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "description": "ID of the pet to retrieve",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "category": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "tags": [
          "pets"
        ],
        "security": [
          {
            "basic": []
          }
        ]
      },
      "put": {
        "summary": "Update pet",
        "description": "Update an existing pet's information",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "description": "ID of the pet to update",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "category": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "tags": [
          "pets"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "dog",
                      "cat",
                      "bird",
                      "fish"
                    ]
                  },
                  "age": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "available",
                      "pending",
                      "sold"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete pet",
        "description": "Remove a pet from the store",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "description": "ID of the pet to delete",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Pet deleted successfully"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "tags": [
          "pets"
        ],
        "security": [
          {
            "basic": []
          },
          {
            "bearerAuth": []
          },
          {
            "apiKey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Pet": {
        "type": "object",
        "required": [
          "id",
          "name",
          "category"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Fluffy"
          },
          "category": {
            "type": "string",
            "enum": [
              "dog",
              "cat",
              "bird",
              "fish"
            ],
            "example": "cat"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "example": 3
          },
          "status": {
            "type": "string",
            "enum": [
              "available",
              "pending",
              "sold"
            ],
            "example": "available"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authentication",
        "scheme": "basic"
      },
      "bearerAuth": {
        "type": "http",
        "description": "Bearer Token Authentication",
        "scheme": "bearer"
      },
      "apiKey": {
        "type": "apiKey",
        "description": "API Key Authentication",
        "name": "X-API-Key",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "pets",
      "description": "Everything about pets"
    }
  ]
}
